package chapter4;

//最长公共子序列，(不要求连续的)
public class demo6 {

	/**
	 现在做这个题目感觉不难了，写两个例子，然后稍微分析一下就可以了
	 */
	public static void main(String[] args) {
		int[] arr1 = {1,2,3,5,6,7};
		int[] arr2 = {1,2,4,5,6};
		int res = test(arr1,arr2);
		System.out.println(res);
	}

	public static int test(int[] arr1,int[] arr2){
		int[][] dp = new int[arr1.length][arr2.length];
		dp[0][0] = arr1[0]==arr2[0]?1:0;//先判断第一位
		//第一行
		for(int i=1;i<arr2.length;i++){
			if(arr1[0]==arr2[i]){
				dp[0][i] = 1; 
			}
			else{
				dp[0][i] = dp[0][i-1];
			}
		}
		//第一列
		for(int i=1;i<arr1.length;i++){
			if(arr2[0]==arr1[i]){
				dp[i][0] = 1; 
			}
			else{
				dp[i][0] = dp[i-1][0];
			}
		}
		//其余情况
		for(int i=1;i<arr1.length;i++){
			for(int j=1;j<arr2.length;j++){
				dp[i][j] = Math.max(dp[i-1][j], dp[i][j-1]);
				if(arr1[i] == arr2[j]){
					dp[i][j] =  dp[i-1][j-1]+1;
				}
			}
		}
		return dp[arr1.length-1][arr2.length-1];
	}
	
	
}
