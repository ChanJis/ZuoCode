package chapter4;

//矩阵的最小路径和
public class demo2 {

	/**
	 dp[i][j] = Math.min(dp[i-1][j],dp[i][j-1])+arr[i][j]
	 */
	public static void main(String[] args) {
		int[][] arr = {{1,3,5,9},{8,1,3,4},{5,0,6,1},{8,8,4,0}};
		int num = findMin(arr);
		System.out.println(num);
	}
	
	public static int findMin(int[][] arr){
		if(arr == null || arr.length==0){
			return -1;
		}
		int row = arr.length;
		int col = arr[0].length;
		int[][] dp = new int[row][col];
		dp[0][0] = arr[0][0];
		//第一行
		for(int i=1;i<col;i++){
			dp[0][i] = arr[0][i]+dp[0][i-1];
		}
		//第一列
		for(int i=1;i<row;i++){
			dp[i][0] = dp[i-1][0] + arr[i][0];
		}
		//余下的数据
		for(int i=1;i<row;i++){
			for(int j=1;j<col;j++){
				dp[i][j] = Math.min(dp[i-1][j], dp[i][j-1])+arr[i][j];
			}
		}
		return dp[row-1][col-1];
	}

}
